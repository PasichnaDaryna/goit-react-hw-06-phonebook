{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/contactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","Form","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleChange","e","target","value","resetInput","onSubmit","preventDefault","find","contact","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","toast","error","info","type","onChange","placeholder","Filter","currentTarget","ContactList","visibleContacts","map","onClick","App","autoClose","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e8ae8a5c.chunk.js","sourcesContent":["import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\nimport {ADD, DELETE, CHANGE_FILTER} from './contacts-types';\n\n\n\nexport const addContact = createAction(ADD, (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\nexport const deleteContact = createAction(DELETE);\n\nexport const changeFilter = createAction(CHANGE_FILTER);\n\nexport default { addContact, deleteContact, changeFilter };\n","// export default {\n//   ADD: 'contacts/add',\n//   DELETE: 'contacts/delete',\n//   CHANGE_FILTER: 'todos/changeFilter',\n// };\n\n\n\nexport const  ADD  = 'contacts/add';\nexport const DELETE = 'contacts/delete';\nexport const CHANGE_FILTER =  'todos/changeFilter'","import { combineReducers } from 'redux';\r\nimport types from './contacts-types';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\n\r\n\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import T from 'prop-types';\r\nimport '../Container/Container.css'\r\n\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: T.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n\r\n\r\n\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\n export const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name && name.toLowerCase && name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport '../Form/Form.css';\n\nfunction Form() {\n     const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(contact => contact && contact.toLowerCase && contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(`'${name}' is already in use!`);\n    } else if (checkRepeatNumber(number)) {\n      toast(`ğŸ¤” ${number} is already in use`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(' Enter the correct name and number!');\n    } else if (checkValidNumber(number)) {\n      toast.error('# Enter the correct phone number!');\n    } else {\n      dispatch(addContact(name, number));;\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form id=\"contact\" onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"John Dows\"\n        />\n      </label>\n      <br />\n      <label>\n        Phone number\n        <input\n          className=\"input-field\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"459-12-56\"\n        />\n      </label>\n\n      <button type=\"submit\" className=\"submit-button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import '../Filter/Filter.css';\n// import { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\n// const Filter = ({ value, onChange }) => {\n//   return (\n//     <label>\n//       Find contacts by name\n//       <input type=\"text\" value={value} onChange={onChange} />\n//     </label>\n//   );\n// };\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n      />\n    </label>\n  );\n};\n\n// const mapStateToProps = state => (\n//   {\n//     value: state.contacts.filter,\n//   });\n\nexport default Filter;\n","import '../contactList/ContactList.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport {\n  getVisibleContacts,\n  getContacts,\n} from '../../redux/contacts/contacts-selectors';\n\n\nconst ContactList = () => {\n const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n  const contacts = useSelector(getContacts);\n\n  return (\n    <ul className=\"contact-list\">\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n             <b>{name} </b>\n              <em>{number}</em>\n          </p>\n          <button type=\"button\" \n          onClick={() => dispatch(deleteContact(id))}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;","import './App.css';\n\nimport { Component } from 'react';\n// import shortid from 'shortid';\nimport Container from './components/Container/Container';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter.js';\nimport ContactList from './components/contactList/ContactList';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n        <ToastContainer autoClose={5000} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}